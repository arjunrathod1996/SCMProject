name: SCM Project CI/CD Actions

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - dev
      - homol
      - Current-Sprint

permissions:
  contents: read
  security-events: write

jobs:
  ci-build-test:
    name: CI - Build, Test, Sonar, Coverage
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: SCM
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to start..."
          for i in {1..10}; do
            nc -z localhost 3306 && echo "MySQL is up" && exit 0
            echo "Waiting..."
            sleep 5
          done
          echo "MySQL failed to start in time."
          exit 1

      - name: Run tests, build and generate JaCoCo report
        run: |
          mvn clean verify \
            -Dspring.datasource.url=jdbc:mysql://localhost:3306/SCM \
            -Dspring.datasource.username=root \
            -Dspring.datasource.password=root \
            -Dspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver \
            -Dspring.jpa.hibernate.ddl-auto=update

      - name: Enforce Code Coverage >= 40%
        run: |
          if [ ! -f target/site/jacoco/jacoco.xml ]; then
            echo "❌ JaCoCo report not found. Failing build."
            exit 1
          fi
          MISSED=$(grep -oPm1 "(?<=<counter type=\"INSTRUCTION\" missed=\")\d+" target/site/jacoco/jacoco.xml)
          COVERED=$(grep -oPm1 "(?<=missed=\"\d+\" covered=\")\d+" target/site/jacoco/jacoco.xml)
          TOTAL=$((MISSED + COVERED))
          PERCENT=$(( 100 * COVERED / TOTAL ))
          echo "Coverage: $PERCENT%"
          if [ "$PERCENT" -lt 40 ]; then
            echo "❌ Code coverage is below 40%. Failing the build."
            exit 1
          else
            echo "✅ Code coverage is $PERCENT%, which meets the requirement."
          fi

      - name: SonarCloud Scan
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=arjunrathod1996_SCMProject \
            -Dsonar.organization=arjunrathod1996 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

  deploy-to-prod:
    name: Deploy to Kubernetes (only master)
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: ci-build-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: arjunrathod1996/scmproject-githubactions
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up KinD (Kubernetes cluster)
        uses: helm/kind-action@v1.7.0

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/mysql.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Submit Maven dependency graph (optional)
        if: always()
        continue-on-error: true
        uses: advanced-security/maven-dependency-submission-action@v4
