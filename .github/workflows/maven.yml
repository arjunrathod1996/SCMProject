name: SCM Project CI/CD Actions

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read
  security-events: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: SCM
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to start..."
          for i in {1..10}; do
            nc -z localhost 3306 && echo "MySQL is up" && exit 0
            echo "Waiting..."
            sleep 5
          done
          echo "MySQL failed to start in time."
          exit 1

      - name: Run tests, build and generate JaCoCo report
        run: |
          if [ -d "src/test" ]; then
            echo "Running tests and building with JaCoCo..."
            mvn clean verify \
              -Dspring.datasource.url=jdbc:mysql://localhost:3306/SCM \
              -Dspring.datasource.username=root \
              -Dspring.datasource.password=root \
              -Dspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver \
              -Dspring.jpa.hibernate.ddl-auto=update
          else
            echo "No tests found. Skipping."
          fi

      - name: SonarCloud Scan
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=arjunrathod1996_SCMProject \
            -Dsonar.organization=arjunrathod1996 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: Check SonarCloud Quality Gate
        run: |
          echo "Waiting for SonarCloud analysis task to complete..."
          taskInfo=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" "https://sonarcloud.io/api/ce/component?component=arjunrathod1996_SCMProject")
          taskId=$(echo "$taskInfo" | jq -r '.current.id')
          
          for i in {1..10}; do
            echo "Checking task status (attempt $i)..."
            taskStatusResp=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" "https://sonarcloud.io/api/ce/task?id=$taskId")
            taskStatus=$(echo "$taskStatusResp" | jq -r '.task.status')
            analysisId=$(echo "$taskStatusResp" | jq -r '.task.analysisId')
            if [[ "$taskStatus" == "SUCCESS" && "$analysisId" != "null" ]]; then
              break
            fi
            sleep 10
          done

          if [ "$analysisId" == "null" ]; then
            echo "❌ SonarCloud analysis did not complete in time."
            exit 1
          fi

          echo "Checking Quality Gate..."
          projectStatus=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" "https://sonarcloud.io/api/qualitygates/project_status?analysisId=$analysisId" | jq -r '.projectStatus.status')

          echo "Quality Gate Status: $projectStatus"

          if [ "$projectStatus" != "OK" ]; then
            echo "❌ SonarCloud Quality Gate failed."
            exit 1
          fi

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: arjunrathod1996/scmproject-githubactions
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up KinD (Kubernetes cluster)
        uses: helm/kind-action@v1.7.0

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/mysql.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml 

      - name: Submit Maven dependency graph (optional)
        if: always()
        continue-on-error: true
        uses: advanced-security/maven-dependency-submission-action@v4
