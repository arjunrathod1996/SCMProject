#spring.application.name=SCM
#
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://localhost:3306/SCM
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.show-sql: true
#
#server.port = 8081

spring.profiles.active=${SPRING_PROFILES_ACTIVE:local}

spring.application.name=SCM

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/SCM}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:root}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true

# ===============================
# = Elasticsearch Configuration
# ===============================
spring.elasticsearch.uris=http://elasticsearch:9200
spring.elasticsearch.connection-timeout=10s
spring.elasticsearch.socket-timeout=30s

server.port=8081


# Additional settings for debugging
#logging.level.org.springframework=DEBUG
#logging.level.org.hibernate=DEBUG

# spring.security.user.name=arjun
# spring.security.user.password=arjun

# Google configure
#spring.security.oauth2.client.registration.google.client-name=google
#spring.security.oauth2.client.registration.google.client-id=442547843644-9clfs41jgo92ptbuvtktpq1vf94nbr95.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=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
#spring.security.oauth2.client.registration.google.scope=email,profile
##spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
#spring.security.oauth2.client.registration.google.redirect-uri=https://9f5e-106-51-172-61.ngrok-free.app/login/oauth2/code/google
#spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
## Github configure
#spring.security.oauth2.client.registration.github.client-name=github
#spring.security.oauth2.client.registration.github.client-id=Iv23li5ghyKpiy2KerFK
#spring.security.oauth2.client.registration.github.client-secret=39c2a33605564caa8ec9fdd27ddf15321db23da9
#spring.security.oauth2.client.registration.github.scope=email,profile
##spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8080/login/oauth2/code/github
#spring.security.oauth2.client.registration.github.redirect-uri=https://9f5e-106-51-172-61.ngrok-free.app/login/oauth2/code/github
#spring.security.oauth2.client.registration.github.authorization-grant-type=authorization_code


# Google OAuth2 configuration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=442547843644-9clfs41jgo92ptbuvtktpq1vf94nbr95.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# GitHub OAuth2 configuration
spring.security.oauth2.client.registration.github.client-name=github
spring.security.oauth2.client.registration.github.client-id=Iv23li5ghyKpiy2KerFK
spring.security.oauth2.client.registration.github.client-secret=39c2a33605564caa8ec9fdd27ddf15321db23da9
spring.security.oauth2.client.registration.github.scope=email,profile
spring.security.oauth2.client.registration.github.authorization-grant-type=authorization_code


create.admin.on.startup=true

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false

#
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.enabled=true


#server.servlet.context-path=/user/dashboard 

#spring.devtools.restart.enabled=false

#jwt.secret=F4328CC68BFB9F62DC76FC6B8A81F
#jwt.expiration=new Date(System.currentTimeMillis() + 1000 * 60 * 30)

jwt.secret=F4328CC68BFB9F62DC76FC6B8A81F
#jwt.expiration=1800000  # 30 minutes in milliseconds

twilio.account_sid=AC391c91ceef2fe96981602401cf6b5ea0
twilio.auth_token=2a9cd0dab66ec378c0696ec6989e0afb
twilio.phone_number=+12258317685

# Set the logging level for the unconditional classes to OFF
logging.level.org.springframework.boot.autoconfigure.condition=OFF


com.crm.config.env=LOCAL
spring.resources.static-locations=classpath:/static/
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

spring.messages.basename=messages
spring.messages.encoding=UTF-8
spring.web.locale=en

pdf.directory=D:\\SimpleSolution\\


#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.consumer.group-id=group_id
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#kafka.enabled=false
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=group_id
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#kafka.enabled=false
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=group_id
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Default profile (Kafka disabled)
kafka.enabled=false
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer



kafka.bootstrap-servers=localhost:9092
kafka.producer.acks=all
kafka.producer.retries=3
kafka.producer.batch-size=16384
kafka.producer.linger-ms=1

#logging.level.org.springframework=DEBUG
#logging.level.org.hibernate=DEBUG




docker.enabled=false


#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=arjundargurathod@gmail.com
#spring.mail.password=Arjun@1996
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
